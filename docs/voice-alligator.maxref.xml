<?xml version='1.0' encoding='utf-8' standalone='yes'?>


<!-- DO NOT EDIT THIS FILE ... YOU WILL LOSE YOUR WORK -->


<c74object name='voice-alligator' category='velocities,  pitches,  etc.'>

	<digest>voice allocator for poly~ object </digest>
	<description>voice allocator for poly~ object </description>


	<!--METADATA-->

	<metadatalist>
		<metadata name='author'>Jan Godde, Edis Ludwig </metadata>
		<metadata name='tag'>velocities</metadata>
		<metadata name='tag'>pitches</metadata>
		<metadata name='tag'>etc.</metadata>
	</metadatalist>


	<!--ARGUMENTS-->

	<objarglist>

		<objarg name='voices_arg' optional='1' type='int'>
			<digest>Number of voices, max: 1024 </digest>
			<description>Number of voices, max: 1024 </description>
		</objarg>

	</objarglist>


	<!--MESSAGES-->

	<methodlist>

		<method name='end'>
			<digest>Sends Notes into release</digest>
			<description>Sends Notes into release. If an argument was provided, send notes of channel (argument) into release, else send all notes into release. </description>
		</method>

		<method name='printscale'>
			<digest>Print scale_array to the max console </digest>
			<description>Print scale_array to the max console </description>
		</method>

		<method name='print'>
			<digest>Print info to the max console </digest>
			<description>Print info to the max console </description>
		</method>

		<method name='endhold'>
			<digest>End hold notes: all (default, can be ommitted), last, first </digest>
			<description>End hold notes: all (default, can be ommitted), last, first </description>
		</method>

		<method name='scale_def'>
			<digest>scale_def [index, value] </digest>
			<description>scale_def [index, value] </description>
		</method>

		<method name='list'>
			<digest>Midipitch, Velocity, (channel), (mono_flag), (realpitch) </digest>
			<description>Midipitch, Velocity, (channel), (mono_flag), (realpitch) </description>
		</method>

		<method name='voices'>
			<digest>set voices </digest>
			<description>set voices </description>
		</method>

	</methodlist>


	<!--ATTRIBUTES-->

	<attributelist>

		<attribute name='active' get='1' set='1' type='long' size='1' >
			<digest>Activates Note-On Processing (default true) </digest>
			<description>Activates Note-On Processing (default true) </description>
		</attribute>

		<attribute name='basefreq' get='1' set='1' type='float64' size='1' >
			<digest>Standard A, (default 440</digest>
			<description>Standard A, (default 440.0 hz) </description>
		</attribute>

		<attribute name='debug' get='1' set='1' type='long' size='1' >
			<digest>Debug on / off </digest>
			<description>Debug on / off </description>
		</attribute>

		<attribute name='hold' get='1' set='1' type='long' size='1' >
			<digest>Hold on / off </digest>
			<description>Hold on / off </description>
		</attribute>

		<attribute name='mono' get='1' set='1' type='long' size='1' >
			<digest>Monophony on / off </digest>
			<description>Monophony on / off </description>
		</attribute>

		<attribute name='mono_note_priority' get='1' set='1' type='long' size='1' >
			<digest>Choose Mono Mode: last note, low note, high note (default last note) </digest>
			<description>Choose Mono Mode: last note, low note, high note (default last note) </description>
		</attribute>

		<attribute name='mono_steals_release' get='1' set='1' type='long' size='1' >
			<digest>If false, new monophony notes will ignore monophony notes that are in release and will generate new notes (default true) </digest>
			<description>If false, new monophony notes will ignore monophony notes that are in release and will generate new notes (default true) </description>
		</attribute>

		<attribute name='output_mode' get='1' set='1' type='long' size='1' >
			<digest>Output Midi Notes or Frequencies (default frequency) </digest>
			<description>Output Midi Notes or Frequencies (default frequency) </description>
		</attribute>

		<attribute name='respect_channel_priorities' get='1' set='1' type='long' size='1' >
			<digest>0 Don't respect, 1 Respect, 2 Respect but steal (default 1) </digest>
			<description>0 Don't respect, 1 Respect, 2 Respect but steal (default 1) </description>
		</attribute>

		<attribute name='scale_def_mode' get='1' set='1' type='long' size='1' >
			<digest>Define Scale by Midi Note or by Frequency (default frequency) </digest>
			<description>Define Scale by Midi Note or by Frequency (default frequency) </description>
		</attribute>

		<attribute name='scale_fill' get='1' set='1' type='long' size='1' >
			<digest>Fill notes that are non-defined in scale_def message with MTOF (default true) </digest>
			<description>Fill notes that are non-defined in scale_def message with MTOF (default true) </description>
		</attribute>

		<attribute name='scalearray_maxsize' get='1' set='1' type='long' size='1' >
			<digest>Set maximum number of entries in scale array (default 128) </digest>
			<description>Set maximum number of entries in scale array (default 128) </description>
		</attribute>

		<attribute name='steal' get='1' set='1' type='long' size='1' >
			<digest>Steal on / off (default true) </digest>
			<description>Steal on / off (default true) </description>
		</attribute>

		<attribute name='steal_hold' get='1' set='1' type='long' size='1' >
			<digest>Steal Hold Notes on / off </digest>
			<description>Steal Hold Notes on / off </description>
		</attribute>

		<attribute name='sustain' get='1' set='1' type='long' size='1' >
			<digest>Sustain on / off </digest>
			<description>Sustain on / off </description>
		</attribute>

	</attributelist>


	<!--RELATED-->

	<seealsolist>
		<seealso name='poly~' />
	</seealsolist>


</c74object>
